AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Resources:
  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev
      Cors:
        AllowMethods: '''*'''
        AllowHeaders: '''*'''
        AllowOrigin: '''*'''
      Auth:
        DefaultAuthorizer: MyCognitoUserPoolAuthorizer
        AddDefaultAuthorizerToCorsPreflight: false
        Authorizers:
          MyCognitoUserPoolAuthorizer:
            UserPoolArn:
              Fn::GetAtt:
              - MyCognitoUserPool
              - Arn
  HelloFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handler.hello
      Runtime: nodejs10.x
      CodeUri: HelloFunction
      Events:
        HelloAPI:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyApi
            Path: /hello
            Method: GET
  MyCognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: sam_api_gateway_cup_auth_cognito_user_pool
      LambdaConfig:
        PreSignUp:
          Fn::GetAtt:
          - PreSignupLambdaFunction
          - Arn
      Policies:
        PasswordPolicy:
          MinimumLength: 8
      UsernameAttributes:
      - email
      Schema:
      - AttributeDataType: String
        Name: email
        Required: false
  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: sam_api_gateway_cup_auth_cognito_client
      UserPoolId:
        Ref: MyCognitoUserPool
  PreSignupLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      InlineCode: "exports.handler = async (event, context, callback) => {\n  event.response\
        \ = { autoConfirmUser: true }\n  return event\n}\n"
      Handler: index.handler
      MemorySize: 128
      Runtime: nodejs10.x
      Timeout: 3
      CodeUri: PreSignupLambdaFunction
  LambdaCognitoUserPoolExecutionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
        - PreSignupLambdaFunction
        - Arn
      Principal: cognito-idp.amazonaws.com
      SourceArn:
        Fn::Sub: arn:${AWS::Partition}:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${MyCognitoUserPool}
Outputs:
  Region:
    Description: Region
    Value:
      Ref: AWS::Region
  ApiId:
    Description: API ID
    Value:
      Ref: MyApi
  ApiUrl:
    Description: API endpoint URL for Prod environment
    Value:
      Fn::Sub: https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/dev/
  CognitoUserPoolId:
    Description: Cognito User Pool Id
    Value:
      Ref: MyCognitoUserPool
  CognitoUserPoolClientId:
    Description: Cognito User Pool Client Id
    Value:
      Ref: CognitoUserPoolClient
